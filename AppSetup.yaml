AWSTemplateFormatVersion: 2010-09-09
Description: EC2 instances setup 
  
Parameters:
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
    ConstraintDescription: must be a valid EC2 instance type

  LatestAmiId:
    Type:  AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

  SSHKey:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance.


Resources:
  WebServer1:
    Type: AWS::EC2::Instance
    Properties:
      UserData:
        Fn::Base64: |
          #!/bin/bash -xe
          sudo amazon-linux-extras install -y nginx1
          sudo service nginx start
      InstanceType: !Ref InstanceType
      ImageId: !Ref LatestAmiId
      SubnetId: !ImportValue vpc-Subnet1Public
      SecurityGroupIds:
        - !ImportValue sec-AppSecurityGroup
      Tags: 
        - Key: Name
          Value: AppNginxInstance1    

  DBServer1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref LatestAmiId
      SubnetId: !ImportValue vpc-Subnet1Private
      SecurityGroupIds:
        - !ImportValue sec-DBSecurityGroup
      Tags: 
        - Key: Name
          Value: AppNginxInstance1 

  WebServer2:
    Type: AWS::EC2::Instance
    Properties:
      UserData:
        Fn::Base64: |
          #!/bin/bash -xe
          sudo amazon-linux-extras install -y nginx1
          sudo service nginx start
      InstanceType: !Ref InstanceType
      ImageId: !Ref LatestAmiId
      SubnetId: !ImportValue vpc-Subnet2Public
      SecurityGroupIds:
        - !ImportValue sec-AppSecurityGroup
      Tags: 
        - Key: Name
          Value: AppNginxInstance1    

  DBServer2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref LatestAmiId
      SubnetId: !ImportValue vpc-Subnet2Private
      SecurityGroupIds:
        - !ImportValue sec-DBSecurityGroup
      Tags: 
        - Key: Name
          Value: AppNginxInstance1 

  LoadBalancerforEC2:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      Instances:
      - !Ref WebServer1
      - !Ref WebServer2
      Listeners:
      - LoadBalancerPort: '80'
        InstancePort: '80'
        Protocol: HTTP
      HealthCheck:
        Target: HTTP:80/
        HealthyThreshold: '3'
        UnhealthyThreshold: '5'
        Interval: '30'
        Timeout: '5'
      SecurityGroups:
        - !ImportValue sec-ELBSecurityGroup
      Subnets:
        - !ImportValue vpc-Subnet1Public
        - !ImportValue vpc-Subnet2Public



Outputs:
  AppServer1Id:
    Description: Web Server in AZ 1 ID
    Value: !Ref WebServer1

  DBServer1Id:
    Description: Database server in AZ 1 ID
    Value: !Ref DBServer1

  AppServer2Id:
    Description: Web Server in AZ 2 ID
    Value: !Ref WebServer2

  DBServer2Id:
    Description: Database server in AZ 2 ID
    Value: !Ref DBServer2

  ELBURL:
    Description: ELB URL
    Value: !Join 
    - ''
    - - 'http://'
      - !GetAtt LoadBalancerforEC2.DNSName