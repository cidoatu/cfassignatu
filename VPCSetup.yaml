AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC setup with public and private subnets in two availability zones and routing tables'

Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Sub '10.0.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Sub '10.0.0.0/16'
  VPCCidrBlock:
    Type: 'AWS::EC2::VPCCidrBlock'
    Properties:
      AmazonProvidedIpv6CidrBlock: true
      VpcId: !Ref VPC
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
      - Key: Name
        Value: !Sub '10.0.0.0/16'
  VPCGatewayAttachment:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  Subnet1Public:
    DependsOn: VPCCidrBlock
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Sub '10.0.0.0/20'
      Ipv6CidrBlock: !Select [0, !Cidr [!Select [0, !GetAtt 'VPC.Ipv6CidrBlocks'], 4, 64]]
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'Public 1'
  Subnet1Private:
    DependsOn: VPCCidrBlock
    Type: 'AWS::EC2::Subnet'
    Properties:
      AssignIpv6AddressOnCreation: false
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Sub '10.0.16.0/20'
      Ipv6CidrBlock: !Select [1, !Cidr [!Select [0, !GetAtt 'VPC.Ipv6CidrBlocks'], 4, 64]]
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'Private 1'
  Subnet2Public:
    DependsOn: VPCCidrBlock
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Sub '10.0.32.0/20'
      Ipv6CidrBlock: !Select [2, !Cidr [!Select [0, !GetAtt 'VPC.Ipv6CidrBlocks'], 4, 64]]
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'Public 2'
  Subnet2Private:
    DependsOn: VPCCidrBlock
    Type: 'AWS::EC2::Subnet'
    Properties:
      AssignIpv6AddressOnCreation: false
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Sub '10.0.48.0/20'
      Ipv6CidrBlock: !Select [3, !Cidr [!Select [0, !GetAtt 'VPC.Ipv6CidrBlocks'], 4, 64]]
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'Private 2'
  RouteTable1Public:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'Public Route 1'
  RouteTable1Private:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'Private route 1'
  RouteTable2Public:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'Publinc route 2'
  RouteTable2Private:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: 'Private route 2'
  RouteTableAssociation1Public:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref Subnet1Public
      RouteTableId: !Ref RouteTable1Public
  RouteTableAssociation1Private:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref Subnet1Private
      RouteTableId: !Ref RouteTable1Private
  RouteTableAssociation2Public:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref Subnet2Public
      RouteTableId: !Ref RouteTable2Public
  RouteTableAssociation2Private:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref Subnet2Private
      RouteTableId: !Ref RouteTable2Private
  EgressOnlyInternetGateway:
    Type: 'AWS::EC2::EgressOnlyInternetGateway'
    Properties:
      VpcId: !Ref VPC
  RouteTable1PublicInternetRoute: 
    Type: 'AWS::EC2::Route'
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTable1Public
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway
  RouteTable1PublicInternetRouteIPv6:
    Type: 'AWS::EC2::Route'
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTable1Public
      DestinationIpv6CidrBlock: '::/0'
      GatewayId: !Ref InternetGateway
  RouteTable1PrivateInternetRouteIPv6:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref RouteTable1Private
      DestinationIpv6CidrBlock: '::/0'
      EgressOnlyInternetGatewayId: !Ref EgressOnlyInternetGateway
  RouteTable2PublicInternetRoute:
    Type: 'AWS::EC2::Route'
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTable2Public
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway
  RouteTable2PublicInternetRouteIPv6:
    Type: 'AWS::EC2::Route'
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref RouteTable2Public
      DestinationIpv6CidrBlock: '::/0'
      GatewayId: !Ref InternetGateway
  RouteTable2PrivateInternetRouteIPv6:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref RouteTable2Private
      DestinationIpv6CidrBlock: '::/0'
      EgressOnlyInternetGatewayId: !Ref EgressOnlyInternetGateway
Outputs:
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  VPC:
    Description: 'VPC.'
    Value: !Ref VPC
    Export:
      Name: !Sub '${AWS::StackName}-VPC'
  InternetGateway:
    Description: 'InternetGateway.'
    Value: !Ref InternetGateway
    Export:
      Name: !Sub '${AWS::StackName}-InternetGateway'
  Subnet1Public:
    Description: 'Subnet 1 public.'
    Value: !Ref Subnet1Public
    Export:
      Name: !Sub '${AWS::StackName}-Subnet1Public'
  Subnet1Private:
    Description: 'Subnet 1 private.'
    Value: !Ref Subnet1Private
    Export:
      Name: !Sub '${AWS::StackName}-Subnet1Private'
  Subnet2Public:
    Description: 'Subnet 2 public.'
    Value: !Ref Subnet2Public
    Export:
      Name: !Sub '${AWS::StackName}-Subnet2Public'
  Subnet2Private:
    Description: 'Subnet 2 private.'
    Value: !Ref Subnet2Private
    Export:
      Name: !Sub '${AWS::StackName}-Subnet2Private'
  AZ1:
    Description: 'AZ of 1'
    Value: !Select [0, !GetAZs '']
    Export:
      Name: !Sub '${AWS::StackName}-AZ1'
  AZ2:
    Description: 'AZ of 2'
    Value: !Select [1, !GetAZs '']
    Export:
      Name: !Sub '${AWS::StackName}-AZ2'
  RouteTable1Public:
    Description: 'Route table 1 public.'
    Value: !Ref RouteTable1Public
    Export:
      Name: !Sub '${AWS::StackName}-RouteTable1Public'
  RouteTable1Private:
    Description: 'Route table 1 private.'
    Value: !Ref RouteTable1Private
    Export:
      Name: !Sub '${AWS::StackName}-RouteTable1Private'
  RouteTable2Public:
    Description: 'Route table 2 public.'
    Value: !Ref RouteTable2Public
    Export:
      Name: !Sub '${AWS::StackName}-RouteTable2Public'
  RouteTable2Private:
    Description: 'Route table 2 private.'
    Value: !Ref RouteTable2Private
    Export:
      Name: !Sub '${AWS::StackName}-RouteTable2Private'
